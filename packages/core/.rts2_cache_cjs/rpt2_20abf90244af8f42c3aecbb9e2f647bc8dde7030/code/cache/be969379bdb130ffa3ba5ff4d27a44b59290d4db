{"code":"// Import vue components\r\n// import * as components from \"./components\";\r\nimport OurVue from \"vue\";\r\nimport { consoleError } from \"./util/console\";\r\n// install function executed by Vue.use()\r\nexport function install(Vue, options) {\r\n    console.log(\"options: \", options);\r\n    if (install.installed)\r\n        return;\r\n    install.installed = true;\r\n    if (OurVue !== Vue) {\r\n        consoleError(\"Multiple instances of Vue detected\\nSee https://github.com/vuetifyjs/vuetify/issues/4068\\n\\nIf you're seeing \\\"$attrs is readonly\\\", it's caused by this\");\r\n    }\r\n    // Used to avoid multiple mixins being setup\r\n    // when in dev mode and hot module reload\r\n    // https://github.com/vuejs/vue/issues/5089#issuecomment-284260111\r\n    if (Vue.$_vueui_installed)\r\n        return;\r\n    Vue.$_vueui_installed = true;\r\n    Vue.mixin({\r\n        beforeCreate() {\r\n            const options = this.$options;\r\n            if (options.vuetify) {\r\n                options.vuetify.init(this, options.ssrContext);\r\n                // this.$vuetify = Vue.observable(options.vuetify.framework)\r\n            }\r\n            else {\r\n                // this.$vuetify = (options.parent && options.parent.$vuetify) || this\r\n            }\r\n        }\r\n    });\r\n    // const $theme = new ThemeProvider(options);\r\n    // Vue.prototype.$theme = Vue.observable($theme);\r\n    // Object.keys(components).forEach(componentName => {\r\n    //   Vue.component(componentName, components[componentName]);\r\n    // });\r\n}\r\n// Create module definition for Vue.use()\r\n// const plugin: Vue.PluginObject = {\r\n//   install\r\n// };\r\n// // To auto-install when vue is found\r\n// /* global window global */\r\n// let GlobalVue = null;\r\n// if (typeof window !== \"undefined\") {\r\n//   GlobalVue = window.Vue;\r\n// } else if (typeof global !== \"undefined\") {\r\n//   GlobalVue = global.Vue;\r\n// }\r\n// if (GlobalVue) {\r\n//   GlobalVue.use(plugin);\r\n// }\r\n// Default export is library as a whole, registered via Vue.use()\r\n// export default plugin;\r\n// To allow individual component use, export components\r\n// each can be registered via Vue.component()\r\n// export * from \"./components/index\";\r\n//# sourceMappingURL=install.js.map","map":"{\"version\":3,\"file\":\"install.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/install.ts\"],\"names\":[],\"mappings\":\"AAAA,wBAAwB;AACxB,8CAA8C;AAC9C,OAAO,MAA0B,MAAM,KAAK,CAAC;AAC7C,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAG9C,yCAAyC;AACzC,MAAM,UAAU,OAAO,CAAC,GAAmB,EAAE,OAAW;IACtD,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;IAClC,IAAK,OAAe,CAAC,SAAS;QAAE,OAAO;IACtC,OAAe,CAAC,SAAS,GAAG,IAAI,CAAC;IAElC,IAAI,MAAM,KAAK,GAAG,EAAE;QAClB,YAAY,CACV,0JAA0J,CAC3J,CAAC;KACH;IAED,4CAA4C;IAC5C,yCAAyC;IACzC,kEAAkE;IAClE,IAAI,GAAG,CAAC,iBAAiB;QAAE,OAAO;IAClC,GAAG,CAAC,iBAAiB,GAAG,IAAI,CAAC;IAE7B,GAAG,CAAC,KAAK,CAAC;QACR,YAAY;YACV,MAAM,OAAO,GAAG,IAAI,CAAC,QAAe,CAAC;YAErC,IAAI,OAAO,CAAC,OAAO,EAAE;gBACnB,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;gBAC/C,4DAA4D;aAC7D;iBAAM;gBACL,sEAAsE;aACvE;QACH,CAAC;KACF,CAAC,CAAC;IAEH,6CAA6C;IAE7C,iDAAiD;IAEjD,qDAAqD;IACrD,6DAA6D;IAC7D,MAAM;AACR,CAAC;AAED,yCAAyC;AACzC,qCAAqC;AACrC,YAAY;AACZ,KAAK;AAEL,uCAAuC;AACvC,6BAA6B;AAC7B,wBAAwB;AACxB,uCAAuC;AACvC,4BAA4B;AAC5B,8CAA8C;AAC9C,4BAA4B;AAC5B,IAAI;AACJ,mBAAmB;AACnB,2BAA2B;AAC3B,IAAI;AAEJ,iEAAiE;AACjE,yBAAyB;AAEzB,uDAAuD;AACvD,6CAA6C;AAC7C,sCAAsC\"}","dts":{"name":"/Users/PC/projects/vue-ui/packages/core/install.d.ts","writeByteOrderMark":false,"text":"import { VueConstructor } from \"vue\";\r\nexport declare function install(Vue: VueConstructor, options: {}): void;\r\n"}}
